#!/usr/bin/env zsh
ps1_git()
{
  local branch="" sha1="" line="" attr="" color=0



  command -v git >/dev/null 2>&1 || {
    printf " \033[1;37m\033[41m[git not found]\033[m "
    return 0
  }

  branch=$(git symbolic-ref -q HEAD 2>/dev/null) || return 0 # Not in git repo.
  branch=${branch##refs/heads/}

  # Now we display the branch.
  sha1=$(git rev-parse --short --quiet HEAD)

  case "${branch:-"(no branch)"}" in
   production|prod)         color="%{\e[1;31m%}"          ;; # red
   master|deploy)           color="%{\e[1;30m%}"          ;; # black_gray
   stage|staging)           color="%{\e[0;33m%}"          ;; # yellow
   dev|develop|development) color="%{\e[1;34m%}"          ;; # blue
   next)                    color="%{\e[0;37m%}"          ;; # gray
   *)
     if [[ -n "${branch}" ]] ; then # Feature Branch :)
       color="%{\e[0;32m%}" # green
     else
       color=0 # reset
     fi
     ;;
  esac

    echo "%{\e[0;34m%}[ $color${branch}%{\e[0m%}%{\e[0;34m%} ]:$sha1"
}

ps1_git_status()
{
  local git_status="$(git status 2>/dev/null)"

  [[ "${git_status}" = *deleted* ]]                    && printf "%s" "%{\e[0;31m%} ✗ %{\e[0m%}"
  [[ "${git_status}" = *Untracked[[:space:]]files:* ]] && printf "%s" "%{\e[0;33m%} ✚ %{\e[0m%}"
  [[ "${git_status}" = *modified:* ]]                  && printf "%s" "%{\e[0;32m%} ⚑ %{\e[0m%}"
}

echo "$(ps1_git_status)$(ps1_git)%{\e[1;30m%}"